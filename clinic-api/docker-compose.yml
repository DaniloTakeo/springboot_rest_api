version: '3.8'
services:
  mysql:
    image: mysql:8
    container_name: clinic_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: clinicdb
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - clinic-network
      
  redis:
    image: redis:7.2
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  clinic-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinic_api
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    networks:
      - clinic-network
      - observability
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - observability

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config-local.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /etc/machine-id:/etc/machine-id:ro
    command: -config.file=/etc/promtail/config-local.yml
    networks:
      - observability

volumes:
  mysql-data:
  redis_data:

networks:
  clinic-network:
    driver: bridge
  observability:
    driver: bridge